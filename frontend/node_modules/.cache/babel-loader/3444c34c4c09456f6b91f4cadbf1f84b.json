{"ast":null,"code":"import _slicedToArray from \"E:\\\\FullStack QuickBuy\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\FullStack QuickBuy\\\\frontend\\\\src\\\\Components\\\\MainContent\\\\UserEditScreen\\\\UserEditScreen.js\";\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsUser, updateUser } from '../../../Actions/userAction';\nimport LoadingBox from '../../LoadingBox';\nimport MessageBox from '../../MessageBox';\nexport default function UserEditScreen(props) {\n  var userId = props.match.params.id;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isSeller = _useState6[0],\n      setIsSeller = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isAdmin = _useState8[0],\n      setIsAdmin = _useState8[1];\n\n  var userDetails = useSelector(function (state) {\n    return state.userDetails;\n  });\n  var loading = userDetails.loading,\n      error = userDetails.error,\n      user = userDetails.user;\n  var userUpdate = useSelector(function (state) {\n    return state.userUpdate;\n  });\n  var loadingUpdate = userUpdate.loading,\n      errorUpdate = userUpdate.error,\n      successUpdate = userUpdate.success;\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      props.history.push(\"/userlist\");\n    }\n\n    if (!user) {\n      dispatch(detailsUser(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setIsSeller(user.isSeller);\n      setIsAdmin(user.isAdmin);\n    }\n  }, [dispatch, props.history, successUpdate, user, userId]);\n\n  var submitHandler = function submitHandler(e) {\n    e.preventDefault(); // dispatch update user\n\n    dispatch(updateUser({\n      _id: userId,\n      name: name,\n      email: email,\n      isSeller: isSeller,\n      isAdmin: isAdmin\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Edit User \", name), loadingUpdate && /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }), errorUpdate && /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, errorUpdate)), loading ? /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }) : error ? /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, error) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"isSeller\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"Is Seller\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"isSeller\",\n    type: \"checkbox\",\n    checked: isSeller,\n    onChange: function onChange(e) {\n      return setIsSeller(e.target.checked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"isAdmin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"Is Admin\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"isAdmin\",\n    type: \"checkbox\",\n    checked: isAdmin,\n    onChange: function onChange(e) {\n      return setIsAdmin(e.target.checked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"Update\")))));\n}","map":{"version":3,"sources":["E:/FullStack QuickBuy/frontend/src/Components/MainContent/UserEditScreen/UserEditScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUser","LoadingBox","MessageBox","UserEditScreen","props","userId","match","params","id","name","setName","email","setEmail","isSeller","setIsSeller","isAdmin","setIsAdmin","userDetails","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","successUpdate","success","dispatch","type","USER_UPDATE_RESET","history","push","submitHandler","e","preventDefault","_id","target","value","checked"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsUser, updateUser } from '../../../Actions/userAction';\r\nimport LoadingBox from '../../LoadingBox';\r\nimport MessageBox from '../../MessageBox';\r\n\r\nexport default function UserEditScreen(props) {\r\n  const userId = props.match.params.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isSeller, setIsSeller] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      props.history.push(\"/userlist\");\r\n    }\r\n    if (!user) {\r\n      dispatch(detailsUser(userId));\r\n    } else {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setIsSeller(user.isSeller);\r\n      setIsAdmin(user.isAdmin);\r\n    }\r\n  }, [dispatch, props.history, successUpdate, user, userId]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // dispatch update user\r\n    dispatch(updateUser({ _id: userId, name, email, isSeller, isAdmin }));\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit User {name}</h1>\r\n          {loadingUpdate && <LoadingBox></LoadingBox>}\r\n          {errorUpdate && (\r\n            <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\r\n          )}\r\n        </div>\r\n        {loading ? (\r\n          <LoadingBox />\r\n        ) : error ? (\r\n          <MessageBox variant=\"danger\">{error}</MessageBox>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"isSeller\">Is Seller</label>\r\n              <input\r\n                id=\"isSeller\"\r\n                type=\"checkbox\"\r\n                checked={isSeller}\r\n                onChange={(e) => setIsSeller(e.target.checked)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"isAdmin\">Is Admin</label>\r\n              <input\r\n                id=\"isAdmin\"\r\n                type=\"checkbox\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" className=\"primary\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}