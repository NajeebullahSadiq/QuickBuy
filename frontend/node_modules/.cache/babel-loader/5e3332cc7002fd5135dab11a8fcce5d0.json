{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\FullStack QuickBuy\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\FullStack QuickBuy\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport Axios from \"axios\";\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../Constants/userConstants\";\nexport var register = function register(name, email, password) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var _yield$Axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: USER_REGISTER_REQUEST,\n                payload: {\n                  email: email,\n                  password: password\n                }\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return Axios.post('/users/register', {\n                name: name,\n                email: email,\n                password: password\n              });\n\n            case 4:\n              _yield$Axios$post = _context.sent;\n              data = _yield$Axios$post.data;\n              dispatch({\n                type: USER_REGISTER_SUCCESS,\n                payload: data\n              });\n              dispatch({\n                type: USER_SIGNIN_SUCCESS,\n                payload: data\n              });\n              localStorage.setItem('userInfo', JSON.stringify(data));\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: USER_REGISTER_FAIL,\n                payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var signin = function signin(email, password) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var _yield$Axios$post2, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: USER_SIGNIN_REQUEST,\n                payload: {\n                  email: email,\n                  password: password\n                }\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return Axios.post('/users/signin', {\n                email: email,\n                password: password\n              });\n\n            case 4:\n              _yield$Axios$post2 = _context2.sent;\n              data = _yield$Axios$post2.data;\n              dispatch({\n                type: USER_SIGNIN_SUCCESS,\n                payload: data\n              });\n              localStorage.setItem('userInfo', JSON.stringify(data));\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch({\n                type: USER_SIGNIN_FAIL,\n                payload: _context2.t0.response && _context2.t0.response.data.message ? _context2.t0.response.data.message : _context2.t0.message\n              });\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 10]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var signout = function signout() {\n  return function (dispatch) {\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('cartItems');\n    localStorage.removeItem('shippingAddress');\n    dispatch({\n      type: USER_SIGNOUT\n    });\n  };\n};","map":{"version":3,"sources":["E:/FullStack QuickBuy/frontend/src/Actions/userAction.js"],"names":["Axios","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","register","name","email","password","dispatch","type","payload","post","data","localStorage","setItem","JSON","stringify","response","message","signin","signout","removeItem"],"mappings":"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","sourcesContent":["\r\nimport Axios from \"axios\";\r\nimport { USER_REGISTER_FAIL, \r\n     USER_REGISTER_REQUEST, \r\n     USER_REGISTER_SUCCESS, \r\n     USER_SIGNIN_FAIL,\r\n     USER_SIGNIN_REQUEST, \r\n     USER_SIGNIN_SUCCESS, \r\n     USER_SIGNOUT} from \"../Constants/userConstants\";\r\n\r\n\r\n     export const register = (name, email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\r\n  try {\r\n    const { data } = await Axios.post('/users/register', {\r\n      name,\r\n      email,\r\n      password,\r\n    });\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const signin = (email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\r\n  try {\r\n    const { data } = await Axios.post('/users/signin', { email, password });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_SIGNIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const signout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  localStorage.removeItem('cartItems');\r\n  localStorage.removeItem('shippingAddress');\r\n  dispatch({ type: USER_SIGNOUT });\r\n};"]},"metadata":{},"sourceType":"module"}